{"version":3,"file":"static/js/7313.d77a036e.chunk.js","mappings":"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","sources":["views/dashboard/tables/ContractDetailsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Col, Badge, Label, Card, CardBody, Row, Input, Button, Spinner } from \"reactstrap\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nconst StudentAttandinitialData = { StudentAttandList: [], totalPages: \"\", currentPage: \"\", loader: false, startDate: '', endDate: \"\" }\nimport Axios from \"../../../hoc/axiosConfig\";\nimport Swal from 'sweetalert2';\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment/moment';\nimport { useNavigate } from \"react-router-dom\";\nexport default function ContractDetailsList() {\n  const [studentData, setState] = useState(StudentAttandinitialData);\n  const { StudentAttandList,contractListData,filteredContracts, totalPages, currentPage, loader, startDate, endDate } = studentData;\n  const navigate = useNavigate();\n  useEffect(() => {\n    var someDate = new Date();\n    let startDat=moment(someDate).startOf('month');\n    let endDat=moment(someDate).endOf('month')\n    // Get the first day of the current month\n    // var StartDat = new Date(year, month - 1, 1); // Day is 1 since we want the first day\n\n    // // Get the last day of the current month\n    // var endDat = new Date(year, month, 0); // Day 0 will give the last day of the previous month\n\n    // Format the dates as yyyy-mm-dd\n    // var startDateFormatted = startDate.toISOString().split('T')[0];\n    // var endDateFormatted = endDate.toISOString().split('T')[0];\n    // let StartDat = moment(someDate).format(\"YYYY-MM-DD\");\n    // let endDat = moment(someDate).format(\"YYYY-MM-DD\");\n    \n    Axios.get(`/dashboard/all-contract?${startDat.format(\"YYYY-MM-DD\")}&endDate=${endDat.format(\"YYYY-MM-DD\")}`).then((res) => {\n      console.log(\"res\", res)\n      setState((prevState) => ({\n        ...prevState,\n        startDate: startDat.toDate(),\n        endDate: endDat.toDate(),\n        StudentAttandList: res.data.contractDtos,\n        loader: false\n      }))\n    }).catch(err => {\n      Swal.fire(err.response.data.message, 'Please try again ')\n      setState((prevState) => ({ ...prevState, loader: false }))\n    })\n  }, [])\n  const dateHandleChange = (name, date) => {\n    if (name === \"startDate\") {\n      setState((prevState) => ({\n        ...prevState,\n        startDate: date\n      }))\n    }\n    if (name === \"endDate\") {\n      setState((prevState) => ({\n        ...prevState,\n        endDate: date\n      }))\n    }\n  }\n  const studentattendGetData = () => {\n \n    if (startDate !== \"\" && endDate !== \"\") {\n      setState((prevState) => ({ ...prevState, loader: true }))\n      let StartDat = moment(startDate).format(\"YYYY-MM-DD\");\n      let endDat = moment(endDate).format(\"YYYY-MM-DD\");\n      Axios.get(`/dashboard/all-contract?startDate=${StartDat}&endDate=${endDat}`).then((res) => {\n        const filteredContracts = StudentAttandList.filter((contractDto) => {\n          const contractStartDate = moment(contractDto.startDate).format(\"YYYY-MM-DD\");\n          const contractEndDate = moment(contractDto.endDate).format(\"YYYY-MM-DD\");\n          return contractStartDate >= StartDat && contractEndDate <= endDat;\n      });\n        setState((prevState) => ({\n          ...prevState,\n          contractListData : filteredContracts.map((contractDto) => ({\n            name: contractDto.contractPromotion.name,\n            fee: contractDto.pricing.fee,\n            totalFee: contractDto.pricing.total,\n            contractStatus: contractDto.contractStatus,\n            startDate: contractDto.startDate,\n            endDate: contractDto.endDate,\n            creationDate: contractDto.creationDate,\n          })),\n          loader: false\n        }))\n      }).catch(err => {\n        Swal.fire(err.response.data.message, 'Please try again ')\n        setState((prevState) => ({ ...prevState, loader: false }))\n      })\n      console.log(\"StudentAttandList\", contractListData)\n    } else {\n      Swal.fire({\n        position: 'center',\n        icon: 'warning',\n        title: 'Please Enter Some Date',\n        showConfirmButton: false,\n        timer: 1500\n      })\n    }\n  }\n \n \n//   const nameHandle = (cell, row) => {\n//     return <>{row.contractPromotion.name}</>\n//   }\n \n \n//   const totalFeeHandle = (cell, row) => {\n//     return <>{row.pricing.total ? row.pricing.total : null}</>\n//   }\n//   const FeeHandle = (cell, row) => {\n//     return <>{row.pricing.fee ? row.pricing.fee : null}</>\n//   }\n//   const creationDateHandle = (cell, row) => {\n//     return <>{cell ? moment(cell).format(\"YYYY-MM-DD\") : null}</>\n//   }\n \n//   const formattedData = StudentAttandList.map(row => ({\n//     name: nameHandle(null, row),\n//     totalFee: totalFeeHandle(null, row),\n//     fee: FeeHandle(null, row),\n//     creationDate: creationDateHandle(row.creationDate, row)\n// }));\n//console.log(formattedData);\n \n  return (\n    <>\n      {loader ? <Spinner\n        className='loaderr'\n        color=\"primary\"\n      >\n        Loading...\n      </Spinner> : null}\n      <Card >\n      <i className = \"fa fa-arrow-circle-left dashicon\" aria-hidden = \"true\" onClick ={() => navigate(\"/dashboard\")} ></i>\n        <CardBody className='cardbg'>\n          <h4><b>Contract Details List</b></h4>\n          <div className='height15'></div>\n          <Row>\n            <Col md={3}>\n              <Label>Start Date</Label>\n              <DatePicker\n                name=\"startDate\"\n                selected={startDate}\n                onChange={(date) => dateHandleChange(\"startDate\", date)}\n                placeholderText=\"mm/dd/yyyy\"\n              />\n            </Col>\n            <Col md={3}>\n              <Label>End Date</Label>\n              <DatePicker\n                selected={endDate}\n                onChange={(date) => dateHandleChange(\"endDate\", date)}\n                placeholderText=\"mm/dd/yyyy\"\n                minDate={startDate}\n              />\n            </Col>\n            <Col md={2} style={{ marginTop: \"30px\" }}>\n              <Button type=\"button\" onClick={() => { studentattendGetData() }}>Search</Button>\n            </Col>\n            <Col md={2} style={{ marginTop: \"30px\" }}>\n              <Button type=\"button\" onClick={() => navigate(\"/dashboard\")} >Back</Button>\n            </Col>\n          </Row>\n          <hr />\n          <Row>\n            <Col>\n              <BootstrapTable data={contractListData} hover multiColumnSearch={true} version='4' search>\n                <TableHeaderColumn width=\"140\" dataField='name' dataSort isKey >Name</TableHeaderColumn>\n                <TableHeaderColumn width=\"120\" dataField='fee'  dataSort>fee</TableHeaderColumn>\n                <TableHeaderColumn width=\"120\" dataField='totalFee' ddataSort>Total Fee</TableHeaderColumn>\n                <TableHeaderColumn width=\"100\" dataField='contractStatus' dataSort>Contract Status</TableHeaderColumn>\n                <TableHeaderColumn width=\"100\" dataField='startDate' dataSort>Start Date</TableHeaderColumn>\n                <TableHeaderColumn width=\"100\" dataField='endDate' dataSort>End Date</TableHeaderColumn>\n                <TableHeaderColumn width=\"100\" dataField='creationDate'  dataSort>Created Date</TableHeaderColumn>\n              </BootstrapTable>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    </>\n  )\n}"],"names":["StudentAttandinitialData","StudentAttandList","totalPages","currentPage","loader","startDate","endDate","ContractDetailsList","_useState","useState","_useState2","_slicedToArray","studentData","setState","contractListData","filteredContracts","navigate","useNavigate","useEffect","someDate","Date","startDat","moment","startOf","endDat","endOf","Axios","concat","format","then","res","console","log","prevState","_objectSpread","toDate","data","contractDtos","catch","err","Swal","response","message","dateHandleChange","name","date","_jsxs","_Fragment","children","_jsx","Spinner","className","color","Card","onClick","CardBody","Row","Col","md","Label","DatePicker","selected","onChange","placeholderText","minDate","style","marginTop","Button","type","StartDat","filter","contractDto","contractStartDate","contractEndDate","map","contractPromotion","fee","pricing","totalFee","total","contractStatus","creationDate","position","icon","title","showConfirmButton","timer","studentattendGetData","BootstrapTable","hover","multiColumnSearch","version","search","TableHeaderColumn","width","dataField","dataSort","isKey","ddataSort"],"sourceRoot":""}