{"version":3,"file":"static/js/8171.67a53acf.chunk.js","mappings":"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","sources":["views/students/studentAttendence/Studentattendence.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { Col, Label, Card, CardBody, Row, Input, FormGroup, Button, Media, Spinner } from \"reactstrap\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from \"yup\";\nimport Axios from \"../../../hoc/axiosConfig\";\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport moment from 'moment/moment';\nimport Select from 'react-select';\nimport \"./studentAttendence.css\";\nimport Swal from 'sweetalert2';\nimport DatePicker from \"react-datepicker\";\nimport emptyimage from \"../../../assets/images/avatars/userempty.jpg\";\n\nconst Studentattendence = () => {\n  const [state, setState] = useState({ startDate: new Date(), master: null,program:null, class: null, loader: false });\n  const [programOptions, setProgramOptions] = useState([]);\n  const [masterOptions, setMasterOptions] = useState([]);\n  const [classOptions, setClassOptions] = useState([]);\n  const [attendenceTime, setAttendenceTime] = useState(\"\");\n  const [attendenceStartTime, setAttendenceStartTime] = useState(\"\");\n  const [studentAttendenceList, setStudentAttendenceList] = useState([]);\n  const [studentDetails, setStudentDetails] = useState([]);\n  const [selectrow, setSelectrow] = useState(false);\n  const [selectrows, setSelectrows] = useState(false)\n  const navigate = useNavigate();\n  useEffect(() => {\n    //getAllMasters();\n    axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\n    axios.get(`${process.env.REACT_APP_BASE_URL_BASE}api/program-names`)\n      .then((res) => {\n       let programs = []\n        res.data.map((key, index) => {\n          programs.push({ value: key.id, label: key.name });\n        })\n        //console.log(\"prgrms\",programs.filter(()=>{programs.label===\"others\"}))\n       // setProgramOptions(programs.filter(()=>{programs.label==\"others\" || programs.label==\"Others\"}))\n       setProgramOptions(programs.filter((program) => program.label.toLowerCase() !== 'others'))\n        \n      }).catch((err) => {\n        if (err.response.status === 401) {\n          Swal.fire('401 session expired..!', 'Please re-login');\n        }\n        else {\n          Swal.fire('Oops, something went wrong. Please try again later');\n        }\n      })\n  }, []);\n  const initialValues = {\n    startDate: state.startDate,\n    master: state.master,\n    class: state.class,\n    program:state.program\n  }\n  const setStartDate = (date, values) => {\n    values.startDate = date;\n    setState({ ...values });\n  }\n  const AttendenceSchema = () => Yup.object().shape({\n    master: Yup.object().required('Master is Required'),\n    class: Yup.object().required('Class is Required'),\n  });\n  const getmasterId = (data) => { classDependable(data.value) }\n  const classDependable = (id) => {\n    Axios.get(`user/${id}/batch`).then(response => {\n      let batchArray = [];\n      response.data.map((mapdata, index) => {\n        batchArray.push({ value: mapdata.id, label: mapdata.name });\n      })\n      setClassOptions(batchArray);\n      setAttendenceTime(\"\");\n      }).catch((err) => {\n      Swal.fire(err.response.data.message, 'Please try again later');\n    })\n  }\n  const getMastersByprogram =(e,name)=>{\n       Axios.get(`program-names/${e.value}/users`).then(response => {\n        if(response.status===200){\n            let staffArray = []\n          response.data.map((key, index) => {\n            staffArray.push({ value: key.id, label: `${key.firstName} ${key.lastName}` });\n          })\n          setState({ ...state });\n           setMasterOptions(staffArray);\n          setClassOptions([]);\n          setStudentAttendenceList([]);\n          setSelectrow(false);\n          setSelectrows(false);\n        }\n      }).catch((err) => { })\n  }\n  const getclassId = (data) => { studentDependable(data.value) }\n  const studentDependable = (id) => {\n    state.loader = true;\n    setState({ ...state });\n    Axios.get(`batch/${id}/student`).then(response => {\n        state.loader = false;\n        setState({ ...state });\n        setAttendenceStartTime(response.data[0].batch.startTime);\n        setAttendenceTime(`${moment(response.data[0].batch.startTime, [\"HH:mm\"]).format(\"hh:mm a\")} - ${moment(response.data[0].batch.endTime, [\"HH:mm\"]).format(\"hh:mm a\")}`);\n        setStudentAttendenceList(response.data);\n      }).catch((err) => {\n      Swal.fire(err.response.data.message, 'Please try again later');\n      state.loader = false;\n      setState({ ...state });\n    })\n  }\n  const displayFullName = (cell, row) => {\n    return (<span>{row ? `${row.firstName} ${row.lastName}` : null}</span>);\n  }\n  const selectedRow = {\n    mode: 'checkbox',\n    showOnlySelected: true,\n    onSelect: (row, isSelect, rowIndex, e) => {\n      setSelectrow(isSelect);\n      let singleArray = studentDetails;\n      if (isSelect === true) {\n        singleArray.push(row);\n        let singleDetails = [];\n        singleArray.map((student, index) => {\n          singleDetails.push({ id: student.id, firstName: student.firstName, lastName: student.lastName, dob: student.dob, gender: student.gender, photo: student.photo, phone: student.phone, email: student.email, studentAttendance: student.studentAttendance });\n        })\n        setStudentDetails(singleDetails);\n      } else {\n        singleArray.map((student, index) => {\n          if (row.id == student.id) {\n            singleArray.splice(index, 1);\n          }\n        })\n      }\n    },\n    onSelectAll: (isSelect, rows, e) => {\n      setSelectrows(isSelect);\n      if (isSelect) {\n        let details = []\n        rows.map((student, index) => {\n          details.push({ id: student.id, firstName: student.firstName, lastName: student.lastName, dob: student.dob, gender: student.gender, photo: student.photo, phone: student.phone, email: student.email, studentAttendance: student.studentAttendance });\n        })\n        setStudentDetails(details);\n      }\n      else {\n        setStudentDetails([]);\n      }\n    }\n  }\n  const pictureFormat = (picture) => {\n    \n    let studentPicture = emptyimage; // picture === null ? emptyimage : `${process.env.REACT_APP_BASE_URL_BASE}auth/student/image/${picture}`;\n    return (\n      <Media>\n        <Media src={studentPicture} id=\"mediastyle\" />\n      </Media>\n    )\n  }\n  const attendenceSubmit = (values) => {\n    let payload = {\n      studentAttendanceDate: values.startDate ? moment(values.startDate).format(\"YYYY-MM-DD\") : values.startDate,\n      studentAttendanceTime: attendenceStartTime,\n      student: studentDetails\n    }\n     axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\n    axios.post(`${process.env.REACT_APP_BASE_URL}/user/${values.master.value}/batch/${values.class.value}/studentAttendance`, payload)\n      .then((res) => {\n         if (res.status === 201) {\n          toast.success(\"Attendence done successfully\", { theme: \"colored\" });\n          setTimeout(() => {\n            setState({ startDate: new Date(), master: {},program:{}, class: {}, loader: false })\n            setStudentAttendenceList([]);\n            setStudentDetails([]);\n            setMasterOptions([]);\n            setClassOptions([]);\n              navigate('/attendence/createstaffattendence/new');\n          }, 1000);\n        }\n      }).catch((err) => {\n        if (err.response.status === 401) {\n          Swal.fire('401 session expired..!', 'Please re-login');\n        }\n        else {\n          Swal.fire(err.response.data.message, 'Please try again later');\n        }\n      })\n  }\n  return (\n    <>\n      <ToastContainer />\n      {state.loader ? <Spinner\n        className='loaderr'\n        color=\"primary\"\n      >\n        Loading...\n      </Spinner> : null}\n      <Card > \n        <CardBody className='cardbg'>\n          <h4><strong>Attendence</strong></h4>\n          <Card className='attendencecard' >\n            <Formik\n              enableReinitialize=\"true\"\n              initialValues={initialValues}\n              validationSchema={AttendenceSchema}\n              onSubmit={attendenceSubmit}\n            >\n              {({ values, handleChange, handleSubmit, errors, touched, handleBlur, isValid, dirty, setFieldValue }) => (\n                <Form className=\"add-edit-user-form\" onSubmit={handleSubmit}>\n                  <Row>\n                     <Col md={3}>\n                      <FormGroup>\n                      <Label for=\"program\">Style</Label>\n                        <Select\n                          name=\"program\"\n                          value={values.program}\n                          options={programOptions}\n                          onChange={(selectedOption) => { setFieldValue('program', selectedOption), getMastersByprogram(selectedOption, 'getMasters'),setFieldValue(\"master\", {}) , setFieldValue(\"class\", {}) }}\n                          invalid={touched.program && !!errors.program}\n                        />\n                        <ErrorMessage name=\"program\" component=\"div\" className='errmsg'></ErrorMessage>\n                      </FormGroup>\n                    </Col>  \n                    <Col md={3}>\n                      <FormGroup>\n                        <Label for=\"master\">Master</Label> \n                        <Select\n                          name=\"master\"\n                          value={values.master}\n                          options={masterOptions}\n                          onChange={(selectedOption) => { setFieldValue('master', selectedOption), getmasterId(selectedOption, 'master'), setFieldValue(\"class\", {}) }}\n                          invalid={touched.master && !!errors.master}\n                        />\n                        <ErrorMessage name=\"master\" component=\"div\" className='errmsg'></ErrorMessage>\n                      </FormGroup>\n                    </Col>\n                    <Col md={3}>\n                      <FormGroup>\n                        <Label for=\"class\">Class</Label>\n                        <Select\n                          name=\"class\"\n                          value={values.class}\n                          options={classOptions}\n                          onChange={(selectedOption) => { setFieldValue('class', selectedOption), getclassId(selectedOption, 'class') }}\n                          invalid={touched.class && !!errors.class}\n                        />\n                        <ErrorMessage name=\"class\" component=\"div\" className='errmsg'></ErrorMessage>\n                      </FormGroup>\n                    </Col>\n                      <Col md={2}>\n                      <Button className=\"markasbutton\" type=\"submit\" disabled={studentDetails.length<= 0 ? true : false}>Mark as Attend</Button>\n                    </Col>\n                  </Row>\n                </Form>\n              )}\n            </Formik>\n          </Card>\n          <hr />\n          <Row>\n            <Col ><h4><strong>Mark as Attendence </strong></h4></Col>\n          </Row>\n          <Row className='rowborder'>\n            <Card className='marginStyleForTablee'>\n              <BootstrapTable data={studentAttendenceList} selectRow={selectedRow} keyField=\"id\" search tableContainerClass='studenttablescro' multiColumnSearch=\"true\">\n                <TableHeaderColumn width=\"5\" dataField='id' hidden >unique field</TableHeaderColumn>\n                <TableHeaderColumn width='120' dataField='photo' dataFormat={pictureFormat}>Student</TableHeaderColumn>\n                <TableHeaderColumn width='150' dataField='firstName' dataFormat={displayFullName}>Name</TableHeaderColumn>\n                {/* <TableHeaderColumn width='120' dataField='gender' >Gender</TableHeaderColumn> */}\n                <TableHeaderColumn width='120' dataField='phone' >Phone</TableHeaderColumn>\n              </BootstrapTable>\n            </Card>\n          </Row>\n          <Row>\n          </Row>\n        </CardBody>\n      </Card>\n    </>\n  )\n}\nexport default Studentattendence;"],"names":["_useState","useState","startDate","Date","master","program","class","loader","_useState2","_slicedToArray","state","setState","_useState3","_useState4","programOptions","setProgramOptions","_useState5","_useState6","masterOptions","setMasterOptions","_useState7","_useState8","classOptions","setClassOptions","_useState9","_useState10","setAttendenceTime","_useState11","_useState12","attendenceStartTime","setAttendenceStartTime","_useState13","_useState14","studentAttendenceList","setStudentAttendenceList","_useState15","_useState16","studentDetails","setStudentDetails","_useState17","_useState18","setSelectrow","_useState19","_useState20","setSelectrows","navigate","useNavigate","useEffect","axios","localStorage","getItem","concat","process","then","res","programs","data","map","key","index","push","value","id","label","name","filter","toLowerCase","catch","err","response","status","Swal","initialValues","classDependable","Axios","batchArray","mapdata","message","studentDependable","_objectSpread","batch","startTime","moment","format","endTime","selectedRow","mode","showOnlySelected","onSelect","row","isSelect","rowIndex","e","singleArray","singleDetails","student","firstName","lastName","dob","gender","photo","phone","email","studentAttendance","splice","onSelectAll","rows","details","_jsxs","_Fragment","children","_jsx","ToastContainer","Spinner","className","color","Card","CardBody","Formik","enableReinitialize","validationSchema","Yup","shape","required","onSubmit","values","payload","studentAttendanceDate","studentAttendanceTime","toast","theme","setTimeout","_ref","handleSubmit","handleChange","errors","touched","setFieldValue","handleBlur","isValid","dirty","Form","Row","Col","md","FormGroup","Label","for","Select","options","onChange","selectedOption","staffArray","invalid","ErrorMessage","component","Button","type","disabled","length","BootstrapTable","selectRow","keyField","search","tableContainerClass","multiColumnSearch","TableHeaderColumn","width","dataField","hidden","dataFormat","picture","studentPicture","emptyimage","Media","src","cell"],"sourceRoot":""}