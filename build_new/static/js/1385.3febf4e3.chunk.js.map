{"version":3,"file":"static/js/1385.3febf4e3.chunk.js","mappings":"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","sources":["views/dashboard/tables/StudentAttandList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Col, Badge, Label, Card, CardBody, Row, Input, Button, Spinner } from \"reactstrap\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nconst StudentAttandinitialData = { StudentAttandList: [], totalPages: \"\", currentPage: \"\", loader: false, startDate: '', endDate: \"\" }\nimport Axios from \"../../../hoc/axiosConfig\";\nimport Swal from 'sweetalert2';\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment/moment';\nimport { useNavigate } from \"react-router-dom\";\nexport default function StudentAttandList() {\n  const [studentData, setState] = useState(StudentAttandinitialData);\n  const { StudentAttandList, totalPages, currentPage, loader, startDate, endDate } = studentData;\n  const navigate = useNavigate();\n  useEffect(() => {\n    var someDate = new Date();\n    let StartDat = moment(someDate).startOf('month');\n\n    let endDat = moment(someDate).endOf('month');\n\n    Axios.get(`/student-attendance/${StartDat.format(\"YYYY-MM-DD\")}/${endDat.format(\"YYYY-MM-DD\")}`).then((res) => {\n      setState((prevState) => ({\n        ...prevState,\n        startDate: StartDat.toDate(),\n        endDate: endDat.toDate(),\n        StudentAttandList: res.data, loader: false\n      }))\n    }).catch(err => {\n      Swal.fire(err.response.data.message, 'Please try again ')\n      setState((prevState) => ({ ...prevState, loader: false }))\n    })\n  }, [])\n  const dateHandleChange = (name, date) => {\n    if (name === \"startDate\") {\n      setState((prevState) => ({\n        ...prevState,\n        startDate: date\n      }))\n    }\n    if (name === \"endDate\") {\n      setState((prevState) => ({\n        ...prevState,\n        endDate: date\n      }))\n    }\n  }\n  const studentattendGetData = () => {\n    if (startDate !== \"\" && endDate !== \"\") {\n      setState((prevState) => ({ ...prevState, loader: true }))\n      let StartDat = moment(startDate).format(\"YYYY-MM-DD\");\n      let endDat = moment(endDate).format(\"YYYY-MM-DD\");\n      Axios.get(`/student-attendance/${StartDat}/${endDat}`).then((res) => {\n        setState((prevState) => ({\n          ...prevState,\n          StudentAttandList: res.data, loader: false\n        }))\n      }).catch(err => {\n        Swal.fire(err.response.data.message, 'Please try again ')\n        setState((prevState) => ({ ...prevState, loader: false }))\n      })\n    } else {\n      Swal.fire({\n        position: 'center',\n        icon: 'warning',\n        title: 'Please Enter Some Date',\n        showConfirmButton: false,\n        timer: 1500\n      })\n    }\n  }\n  const absentCount = (cell, row) => {\n    let date1 = new Date(startDate);\n    let date2 = new Date(endDate);\n    let time_difference = date2.getTime() - date1.getTime();\n    let days_difference = time_difference / (1000 * 60 * 60 * 24);\n    let totalcont = days_difference + 1\n    let absent = totalcont - row.attendanceCount\n    let finalData = absent.toFixed(0)\n    return (<>{finalData ? finalData : null}</>)\n  }\n  return (\n    <>\n      {loader ? <Spinner\n        className='loaderr'\n        color=\"primary\"\n      >\n        Loading...\n      </Spinner> : null}\n      <CardBody className='cardbg'>\n        <h4><b>Student Attendance List</b></h4>\n        <div className='height15'></div>\n        <Row>\n          <Col md={3}>\n            <Label>Start Date</Label>\n            <DatePicker\n              name=\"startDate\"\n              selected={startDate ? new Date(startDate) : null}\n              onChange={(date) => dateHandleChange(\"startDate\", date)}\n              placeholderText=\"mm/dd/yyyy\"\n            />\n          </Col>\n          <Col md={3}>\n            <Label>End Date</Label>\n            <DatePicker\n              selected={endDate}\n              onChange={(date) => dateHandleChange(\"endDate\", date)}\n              placeholderText=\"mm/dd/yyyy\"\n              minDate={startDate}\n            />\n          </Col>\n          <Col md={2} style={{ marginTop: \"30px\" }}>\n            <Button type=\"button\" onClick={() => { studentattendGetData() }}>Search</Button>\n          </Col>\n          <Col md={2} style={{ marginTop: \"30px\" }}>\n            <Button type=\"button\" onClick={() => navigate(\"/dashboard\")} >Back</Button>\n          </Col>\n        </Row>\n        <hr />\n        <Row>\n          <Col>\n            <BootstrapTable data={StudentAttandList} hover multiColumnSearch={true} version='4' search>\n              <TableHeaderColumn width=\"140\" dataField='name' dataSort isKey>Name</TableHeaderColumn>\n              <TableHeaderColumn width=\"180\" dataField='masterName' dataSort>Master Name</TableHeaderColumn>\n              <TableHeaderColumn width=\"120\" dataField='program' dataSort>Style</TableHeaderColumn>\n              <TableHeaderColumn width=\"100\" dataAlign='center' dataField=\"attendanceCount\" dataSort>Attn.Count</TableHeaderColumn>\n              <TableHeaderColumn width=\"100\" dataAlign='center' dataField='endTime' dataFormat={absentCount} dataSort>Absent Count</TableHeaderColumn>\n            </BootstrapTable>\n          </Col>\n        </Row>\n      </CardBody>\n    </>\n  )\n}\n"],"names":["StudentAttandinitialData","StudentAttandList","totalPages","currentPage","loader","startDate","endDate","_useState","useState","_useState2","_slicedToArray","studentData","setState","navigate","useNavigate","useEffect","someDate","Date","StartDat","moment","startOf","endDat","endOf","Axios","concat","format","then","res","prevState","_objectSpread","toDate","data","catch","err","Swal","response","message","dateHandleChange","name","date","_jsxs","_Fragment","children","_jsx","Spinner","className","color","CardBody","Row","Col","md","Label","DatePicker","selected","onChange","placeholderText","minDate","style","marginTop","Button","type","onClick","position","icon","title","showConfirmButton","timer","studentattendGetData","BootstrapTable","hover","multiColumnSearch","version","search","TableHeaderColumn","width","dataField","dataSort","isKey","dataAlign","dataFormat","cell","row","date1","finalData","getTime","attendanceCount","toFixed"],"sourceRoot":""}