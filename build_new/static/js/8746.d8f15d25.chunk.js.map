{"version":3,"file":"static/js/8746.d8f15d25.chunk.js","mappings":"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","sources":["views/dashboard/tables/TestingEligibilityList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Col, Label, Card, CardBody, Row, Input, Spinner, Button } from \"reactstrap\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport Axios from \"../../../hoc/axiosConfig\";\nimport Swal from 'sweetalert2';\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment/moment';\nimport { useNavigate } from \"react-router-dom\";\nconst StudentAttandinitialData = { chossenDate: \"\", TestingList: [], totalPages: \"\", currentPage: \"\", loader: false, totalTestingAnticipatedByDate: \"\", totalTestingApprovedByDate: \"\" }\nexport default function TestingEligibilityList() {\n  const [studentData, setState] = useState(StudentAttandinitialData);\n  const { chossenDate, TestingList, totalPages, currentPage, loader, totalTestingAnticipatedByDate, totalTestingApprovedByDate } = studentData;\n  const navigate = useNavigate();\n  const getDatafromDateChange = (name, date) => {\n    setState((prevState) => ({ ...prevState, loader: true }))\n    let chossenDat = moment(date).format(\"YYYY-MM-DD\");\n    Axios.get(`/level-testing/${chossenDat}`).then((res) => {\n      setState((prevState) => ({\n        ...prevState,\n        TestingList: res.data.levelTestingSummaryList, loader: false,\n        totalTestingAnticipatedByDate: res.data.totalTestingAnticipatedByDate,\n        totalTestingApprovedByDate: res.data.totalTestingApprovedByDate,\n        chossenDate: date\n      }))\n    }).catch(err => {\n      Swal.fire(err.response.data.message, 'Please try again ')\n      setState((prevState) => ({ ...prevState, loader: false }))\n    })\n  }\n  useEffect(() => {\n    let dateToday = moment(new Date()).format(\"YYYY-MM-DD\");\n    getDatafromDateChange(\"chossenDate\", dateToday)\n  }, [])\n  return (\n    <>\n      {loader ? <Spinner\n        className='loaderr'\n        color=\"primary\"\n      >\n        Loading...\n      </Spinner> : null}\n      <Card >\n        <i className = \"fa fa-arrow-circle-left dashicon\" aria-hidden = \"true\" onClick ={() => navigate(\"/dashboard\")} ></i>\n        <CardBody className='cardbg'>\n          <h4><b>Testing Eligibility and Readiness</b></h4>\n          <div className='height15'></div>\n          <Row>\n            <Col md={3}>\n              <Label>Choose a level Testing Date :</Label>\n              <DatePicker\n                name=\"chossenDate\"\n                selected={chossenDate ? new Date(chossenDate) : null}\n                onChange={(date) => getDatafromDateChange(\"chossenDate\", date)}\n                placeholderText=\"mm/dd/yyyy\"\n              />\n            </Col>\n            <Col md={3}>\n              <Label>Total Anticipated</Label>\n              <Input type=\"text\" value={totalTestingAnticipatedByDate} disabled />\n            </Col>\n\n            <Col md={3}>\n              <Label>Total Approved</Label>\n              <Input type=\"text\" value={totalTestingApprovedByDate} disabled />\n            </Col>\n            <Col md={2} style={{ marginTop: \"30px\" }}>\n              <Button type=\"button\" onClick={() => navigate(\"/dashboard\")} >Back</Button>\n            </Col>\n          </Row>\n          <hr />\n          <Row>\n            <Col>\n              <BootstrapTable data={TestingList} hover multiColumnSearch={true} version='4' search>\n                <TableHeaderColumn width=\"140\" dataField='name' dataSort isKey>Name</TableHeaderColumn>\n                <TableHeaderColumn width=\"180\" dataField='level' dataSort>Level</TableHeaderColumn>\n                <TableHeaderColumn width=\"140\" dataField='testingAnticipated' dataSort> Testing Anticipated</TableHeaderColumn>\n                <TableHeaderColumn width=\"140\" dataField='testingApproved' dataSort>Testing Approved</TableHeaderColumn>\n              </BootstrapTable>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n"],"names":["StudentAttandinitialData","chossenDate","TestingList","totalPages","currentPage","loader","totalTestingAnticipatedByDate","totalTestingApprovedByDate","TestingEligibilityList","_useState","useState","_useState2","_slicedToArray","studentData","setState","navigate","useNavigate","getDatafromDateChange","name","date","prevState","_objectSpread","chossenDat","moment","format","Axios","concat","then","res","data","levelTestingSummaryList","catch","err","Swal","response","message","useEffect","dateToday","Date","_jsxs","_Fragment","children","_jsx","Spinner","className","color","Card","onClick","CardBody","Row","Col","md","Label","DatePicker","selected","onChange","placeholderText","Input","type","value","disabled","style","marginTop","Button","BootstrapTable","hover","multiColumnSearch","version","search","TableHeaderColumn","width","dataField","dataSort","isKey"],"sourceRoot":""}