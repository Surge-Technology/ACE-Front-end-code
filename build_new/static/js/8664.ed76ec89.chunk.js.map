{"version":3,"file":"static/js/8664.ed76ec89.chunk.js","mappings":"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","sources":["hoc/pagination.js","views/students/inquiry/InquiryList.js"],"sourcesContent":["import React, { Component, useEffect, useState } from 'react'\nimport Pagination from \"rc-pagination\";\nimport \"rc-pagination/assets/index.css\";\nimport localeInfo from \"rc-pagination/lib/locale/en_US\";\n \nexport default function TablePagination(props) {\n  const [data,setData] = useState({ totalDocs:props.totalPages,currentPage:props.currentPage})\n  const  onPaginationChange=(data)=>{\n    props.callbackfunc(data);\n  }\n  const  onShowSizeChange=(data)=>{\n    console.log(\"onShowSizeChange\",data)\n  }\n  return (\n    <>\n    <Pagination\n     showTotal={(total, range) =>\n      `${range[0]} - ${range[1]} of ${total} items`\n      }\n       showQuickJumper\n    pageSizeOptions={['10', '20', '50', '100']}\n    showSizeChanger\n    defaultPageSize={props.defaultPageSize}\n    defaultCurrent={data.currentPage}\n    onShowSizeChange={ onShowSizeChange}\n    onChange={onPaginationChange}\n    total={data.totalDocs}\n    locale={localeInfo}\n  />\n</>\n  )\n}\n","\nimport React, { useState, useEffect } from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport { Col, Card, CardBody, CardFooter, Row, Button, Spinner } from \"reactstrap\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\nimport Axios from \"../../../hoc/axiosConfig\"\nimport moment from 'moment/moment';\nimport TablePagination from '../../../hoc/pagination';\nimport Swal from 'sweetalert2';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nconst studentInitialData = {\n  inquiryList: [], totalPages: \"\", currentPage: \"\", loader: false, permissions: { canCreate: true, canView: true, canUpdate: true, canDelete: true },\n  studPermissions: { canCreate: true, canView: true, canUpdate: true, canDelete: true }\n}\nexport default function InquiryList(props) {\n  const [initialData, setState] = useState(studentInitialData);\n  const { inquiryList, totalPages, currentPage, loader, permissions, studPermissions } = initialData\n  const history = useNavigate();\n  const tableList = (page) => {\n    setState((prevState) => ({ ...prevState, loader: true }))\n    Axios.get(`inquiry/inquiries?page=${page - 1}&size=10&sort=id,desc`).then((res) => {\n      setState((prevState) => ({\n        ...prevState,\n        inquiryList: res.data.content,\n        totalPages: res.data.totalElements,\n        currentPage: res.data.pageNumber + 1,\n        loader: false\n      }))\n    }).catch(err => {\n      Swal.fire(err.response.data.message, 'Please try again later');\n      setState((prevState) => ({ ...prevState, loader: false, inquiryList: [], }))\n    })\n  }\n\n  const deleteInquiryHandle = (id) => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"Are you sure you want delete?\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        Axios.delete(`inquiry/${id}`).then((res) => {\n          tableList(\"1\");\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: 'Record deleted successfully',\n            showConfirmButton: false,\n            timer: 1500\n          })\n        }).catch((err) => {\n          Swal.fire(err.response.data.message, 'Please try again ')\n        })\n      }\n    })\n  }\n  useEffect(() => {\n    let userid = localStorage.getItem(\"userid\");\n    axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\n    axios.get(`${process.env.REACT_APP_BASE_URL_BASE}auth/users/${userid}`)\n      .then((res) => {\n        let permission = res.data.roles ? res.data.roles[0][\"inquiries\"] : null;\n        // console.log(res,permission);\n        let studpermission = res.data.roles ? res.data.roles[0][\"students\"] : null;\n        setState((prevState) => ({\n          ...prevState,\n          permissions: permission, studPermissions: studpermission\n        }))\n      }).catch((err) => { })\n    const thead = document.getElementsByTagName(\"thead\");\n    thead[0].style.backgroundColor = localStorage.getItem('tableColor');\n    thead[1] ? thead[1].style.backgroundColor = localStorage.getItem('tableColor') : null;\n    thead[2] ? thead[2].style.backgroundColor = localStorage.getItem('tableColor') : null;\n    tableList(\"1\");\n  }, []);\n  const studentsActionsHandle = (cell, row) => {\n    return (\n      <>\n        <span>\n          {permissions.canUpdate ? <i className=\"fa fa-pencil\" title='Edit' id=\"pencilspace\" aria-hidden=\"true\" onClick={() => history(`/studentTabs/CreateInquiry/${row.id}`)} style={{ cursor: 'pointer', fontSize: \"15px\", color: \"green\" }}></i> : null}\n          {permissions.canDelete ? <i className=\"fa fa-trash-o\" title='Delete' aria-hidden=\"true\" id=\"trashspace\" onClick={() => { deleteInquiryHandle(row.id) }} style={{ cursor: 'pointer', fontSize: \"15px\", padding: \"0px 10px 0px 0px\", color: \"red\" }}></i> : null}\n          {studPermissions.canCreate ? row.inquiryStatus ? row.inquiryStatus.name === \"Register\" ? <i className=\"fa fa-user\" title='Redirect To Add Student' id=\"pencilspace\" aria-hidden=\"true\" onClick={() => history(`/studentTabs/students/create`)} style={{ cursor: 'pointer', fontSize: \"15px\", color: \"green\" }}></i> : null : null : null}\n        </span>\n      </>\n    )\n  }\n\n  const onPaginationChange = (page) => {\n    tableList(page);\n  }\n\n  const displayFullName = (cell, row) => {\n    return (<span>{row ? `${row.firstName} ${row.lastName}` : null}</span>)\n  }\n  const displayDate = (date) => {\n    return (<>{moment(date).format(\"MM/DD/YYYY\")}</>)\n  }\n  const displayinquiryServices = (cell, row) => {\n    return (<span>{row.inquiryServices ? row.inquiryServices.name : null}</span>)\n  }\n  const displayinquiryStatus = (cell, row) => {\n    return (<span>{row.inquiryStatus ? row.inquiryStatus.name : null}</span>)\n  }\n  const displayinquiryType = (cell, row) => {\n    return (<span>{row.inquiryType ? row.inquiryType.name : null}</span>)\n  }\n  return (\n    <>\n      <ToastContainer />\n      {loader ? <Spinner\n        className='loaderr'\n        color=\"primary\"\n      >\n        Loading...\n      </Spinner> : null}\n      <CardBody className='cardbg' style={{ backgroundColor: localStorage.getItem('cardColor') }}>\n        <Row>\n          <Col ><h4><strong>Inquiry List</strong></h4></Col>\n          <Col>\n            {permissions.canCreate ? <Button color=\"primary\" size=\"sm\" style={{ float: \"right\", backgroundColor: localStorage.getItem('btColor') }} onClick={() => history(\"/studentTabs/CreateInquiry/new\")}>Add Inquiry</Button> : null}\n          </Col>\n        </Row>\n        <div className='height15'></div>\n        <Row>\n          <Col>\n            <Card >\n              <BootstrapTable data={inquiryList} hover multiColumnSearch={true} version='4' search>\n                <TableHeaderColumn width=\"140\" dataField='firstName' dataFormat={displayFullName} dataSort>Name</TableHeaderColumn>\n                <TableHeaderColumn width=\"160\" dataField='email' dataSort>Email</TableHeaderColumn>\n                <TableHeaderColumn width=\"110\" dataField='phone' dataSort>Phone</TableHeaderColumn>\n                <TableHeaderColumn width=\"110\" dataField='inquiryServices' dataFormat={displayinquiryServices} dataSort> Services</TableHeaderColumn>\n                <TableHeaderColumn width=\"110\" dataField='inquiryStatus' dataFormat={displayinquiryStatus} dataSort> Status</TableHeaderColumn>\n                <TableHeaderColumn width=\"110\" dataField='inquiryType' dataFormat={displayinquiryType} dataSort> Type</TableHeaderColumn>\n                <TableHeaderColumn width=\"120\" dataField='creationDate' dataFormat={displayDate} dataSort>Created Date</TableHeaderColumn>\n                <TableHeaderColumn width=\"100\" dataField=\"id\" dataAlign='center' dataFormat={studentsActionsHandle} isKey>Action</TableHeaderColumn>\n              </BootstrapTable>\n              <CardFooter>\n                {inquiryList.length >= 1 ? <TablePagination totalPages={totalPages} currentPage={currentPage} callbackfunc={onPaginationChange} defaultPageSize={\"10\"}></TablePagination> : null}\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </CardBody>\n    </>\n  )\n}\n"],"names":["TablePagination","props","_useState","useState","totalDocs","totalPages","currentPage","_useState2","_slicedToArray","data","_jsx","_Fragment","children","Pagination","showTotal","total","range","concat","showQuickJumper","pageSizeOptions","showSizeChanger","defaultPageSize","defaultCurrent","onShowSizeChange","console","log","onChange","callbackfunc","locale","localeInfo","studentInitialData","inquiryList","loader","permissions","canCreate","canView","canUpdate","canDelete","studPermissions","InquiryList","initialData","setState","history","useNavigate","tableList","page","prevState","_objectSpread","Axios","then","res","content","totalElements","pageNumber","catch","err","Swal","response","message","useEffect","userid","localStorage","getItem","axios","process","permission","roles","studpermission","thead","document","getElementsByTagName","style","backgroundColor","_jsxs","ToastContainer","Spinner","className","color","CardBody","Row","Col","Button","size","float","onClick","Card","BootstrapTable","hover","multiColumnSearch","version","search","TableHeaderColumn","width","dataField","dataFormat","cell","row","firstName","lastName","dataSort","inquiryServices","name","inquiryStatus","inquiryType","date","moment","format","dataAlign","title","id","cursor","fontSize","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","position","showConfirmButton","timer","padding","isKey","CardFooter","length"],"sourceRoot":""}