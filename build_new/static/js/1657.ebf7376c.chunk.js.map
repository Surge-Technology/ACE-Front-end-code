{"version":3,"file":"static/js/1657.ebf7376c.chunk.js","mappings":"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","sources":["views/settings/Staff/permissions/permissionsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Col, Card, CardBody, CardFooter, Row, Button ,Spinner} from \"reactstrap\";\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\n \nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport moment from 'moment';\nconst PermissionsList = () => {\n  const usersInitialData = { permissionsList: [], totalPages: \"\", currentPage: \"\", loader: false ,\n  permissions:{canCreate: true, canView: true, canUpdate: true, canDelete: true}}\n  const [initialData, setState] = useState(usersInitialData);\n  const { permissionsList, totalPages, currentPage, loader,permissions } = initialData\n  let history = useNavigate();\n \n  useEffect(()=>{\n    let userid=localStorage.getItem(\"userid\");\n    axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\n    axios.get(`${process.env.REACT_APP_BASE_URL_BASE}auth/users/${userid}`)\n      .then((res) => {\n          let permission = res.data.roles?res.data.roles[0][\"permissions\"]:null;\n        setState((prevState) => ({\n          ...prevState,\n           permissions:permission\n        }))\n      }).catch((err) => { })\n    axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\n    axios.get(`${process.env.REACT_APP_BASE_URL_BASE}auth/roles`)\n    .then((res) => {\n      // console.log(\"response\",res.data.id)\n      setState((prevState)=>({\n        ...prevState,\n        permissionsList:res.data,loader:false\n      }));\n    }).catch((err) => {\n        Swal.fire(err.response?err.response.data.message:null, 'Please try again later');\n      })\n  },[])\n      const permissionActionsHandle=(cell, row)=>{\n        return (\n          <>\n            <span>  \n              {permissions.canUpdate?\n<Link  id={row.id} to={`/permissions/edit/${row.id}`}>\n                <i className=\"fa fa-pencil\" id=\"pencilspace\" aria-hidden=\"true\"></i>\n                </Link>:null\n              }\n \n \n            {/* {permissions.canDelete?      <i className=\"fa fa-trash-o\" aria-hidden=\"true\" onClick={()=>  permissionDeleteHandle(row.id)} style={{ cursor: 'pointer', fontSize: \"15px\", color: \"red\" }}  ></i> :null} */}\n            </span>\n          </>\n        )\n      }\n      // const permissionDeleteHandle=(id)=>{\n      //   console.log(\"certificateDeleteHandle\",id);\n      //   Swal.fire({\n      //     title: 'Are you sure?',\n      //     text: \"Are you sure you want delete?\",\n      //     icon: 'warning',\n      //     showCancelButton: true,\n      //     confirmButtonColor: '#3085d6',\n      //     cancelButtonColor: '#d33',\n      //     confirmButtonText: 'Yes, delete it!'\n      //   }).then((result) => {\n      //     if (result.isConfirmed) {\n      //       axios.defaults.headers.common['Authorization'] = \"Bearer \" + localStorage.getItem(\"token\");\n      //       axios.delete(`${process.env.REACT_APP_BASE_URL_BASE}api/roles/${id}`).then((res) => {\n      //           if (res.status == 204) {\n      //             tableList(\"1\");\n      //             Swal.fire('Record Deleted!', '', 'success')\n      //           }\n      //         }).catch((err) => {\n      //           Swal.fire( err.response.data.message, 'Please try again '  )\n      //       })\n      //     }\n      //   })\n      // }\n  const indexFormat = (cell, row, enumObject, index) => {\n    return (<>{index + 1}</>);\n  }\n  const displayDate = (date)=>{\n    return(<>{moment(date).format(\"MM/DD/YYYY\")}</>)\n  }\n \n \n  return (\n    <> {loader?<Spinner\n      className='loaderr'\n       color=\"primary\"\n      >\n      Loading...\n    </Spinner>:null}\n         <CardBody className='cardbg'>\n          <Row>\n            <Col ><h4><strong>Roles Permissions </strong></h4></Col>\n            <Col>\n                {permissions.canCreate?  <Button outline color=\"info\" size=\"sm\" className='buttonfloat' onClick={() => history(\"/permissions/create/new\")}>Add Role </Button>:null}\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Card >\n                <BootstrapTable data={permissionsList} keyField=\"sno\" search striped hover multiColumnSearch={true} version='4'>\n                  <TableHeaderColumn width=\"100\" dataAlign='left' dataField='sno' dataFormat={indexFormat} dataSort>S No</TableHeaderColumn>\n                  <TableHeaderColumn width=\"160\"   dataField='roleName' dataSort>Role Name</TableHeaderColumn>\n                 <TableHeaderColumn width=\"100\" dataField='creationDate'  dataFormat={displayDate}>Creation Date</TableHeaderColumn>\n                 <TableHeaderColumn width=\"160\"   dataField='createdBy' dataSort>Created By</TableHeaderColumn>\n                 <TableHeaderColumn width=\"160\"   dataField='createdBy'  dataFormat={permissionActionsHandle}>Action</TableHeaderColumn>\n                   </BootstrapTable>\n                <CardFooter>\n                 </CardFooter>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n          </Row>\n        </CardBody>\n    </>\n  )\n}\nexport default PermissionsList;"],"names":["_useState","useState","permissionsList","totalPages","currentPage","loader","permissions","canCreate","canView","canUpdate","canDelete","_useState2","_slicedToArray","initialData","setState","history","useNavigate","useEffect","userid","localStorage","getItem","axios","concat","process","then","res","permission","data","roles","prevState","_objectSpread","catch","err","Swal","response","message","_jsxs","_Fragment","children","_jsx","Spinner","className","color","CardBody","Row","Col","Button","outline","size","onClick","Card","BootstrapTable","keyField","search","striped","hover","multiColumnSearch","version","TableHeaderColumn","width","dataAlign","dataField","dataFormat","cell","row","enumObject","index","dataSort","date","moment","format","Link","id","to","CardFooter"],"sourceRoot":""}